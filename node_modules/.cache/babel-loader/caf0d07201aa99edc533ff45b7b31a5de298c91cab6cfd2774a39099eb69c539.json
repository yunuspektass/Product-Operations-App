{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      selectedProduct: null,\n      product: null,\n      product_count: null,\n      saveButtonClicked: false\n    };\n  },\n  computed: {\n    ...mapGetters([\"getProducts\"]),\n    isLoading() {\n      if (this.saveButtonClicked) {\n        return {\n          display: \"block\"\n        };\n      } else {\n        return {\n          display: \"none\"\n        };\n      }\n    }\n  },\n  methods: {\n    productSelected() {\n      this.product = this.$store.getters.getProduct(this.selectedProduct)[0];\n    },\n    save() {\n      this.saveButtonClicked = true;\n      let product = {\n        key: this.selectedProduct,\n        count: this.product_count\n      };\n      this.$store.dispatch(\"sellProduct\", product);\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if ((this.selectedProduct !== null || this.product_count > 0) && this.saveButtonClicked) {\n      if (confirm(\"Kaydedilmemiş değişiklikler var. Yine de çıkmak istiyor musunuz?\")) {\n        next();\n      } else {\n        next(false);\n      }\n    } else {\n      next();\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","selectedProduct","product","product_count","saveButtonClicked","computed","isLoading","display","methods","productSelected","$store","getters","getProduct","save","key","count","dispatch","beforeRouteLeave","to","from","next","confirm"],"sources":["src/components/products/ProductSell.vue"],"sourcesContent":["\n\n<template>\n  <div class=\"container\">\n    <div class=\"loading\" :style=\"isLoading\">\n      <div class=\"lds-ripple\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-6 offset-3 pt-3 card mt-5 shadow\">\n        <div class=\"card-body\">\n          <h3>Ürün Çıkışı</h3>\n          <hr>\n          <div class=\"form-group\">\n            <label>Ürün Adı</label>\n            <select class=\"form-control\" v-model=\"selectedProduct\" @change=\"productSelected\">\n              <option selected disabled>Lütfen Bir Ürün Seçiniz.</option>\n              <option :disabled=\"product.count == 0\" :value=\"product.key\" v-for=\"product in getProducts\" > {{ product.title }}</option>\n            </select>\n          </div>\n          <transition name=\"fade\" mode=\"out-in\">\n          <div class=\"card mb-2 border border-danger\" v-if=\"product !== null\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 text-center\">\n                  <div class=\"mb-3\">\n                    <span class=\"badge badge-info\">Stok : {{ product.count }}</span>\n                    <span class=\"badge badge-primary\">Fiyat : {{ product.price | currency }}</span>\n                  </div>\n                  <p class=\"border border-warning p-2 text-secondary\">\n                    {{product.description}}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          </transition>\n          <div class=\"form-group\">\n            <label>Adet</label>\n            <input type=\"text\" v-model=\"product_count\" class=\"form-control\" placeholder=\"Ürün adetini giriniz..\">\n          </div>\n          <hr>\n          <button @click=\"save\" class=\"btn btn-primary\">Kaydet</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport {mapGetters} from \"vuex\";\nexport default {\n  data(){\n    return {\n      selectedProduct: null,\n      product : null,\n      product_count : null,\n      saveButtonClicked : false\n    }\n  },\n  computed : {\n     ...mapGetters([\"getProducts\"]),\n    isLoading() {\n      if (this.saveButtonClicked) {\n        return {\n          display: \"block\"\n        }\n      } else {\n        return {\n          display: \"none\"\n\n        }\n      }\n    }\n  },\n  methods : {\n    productSelected(){\n      this.product = this.$store.getters.getProduct(this.selectedProduct)[0];\n\n    },\n    save(){\n      this.saveButtonClicked = true;\n     let product = {\n       key: this.selectedProduct,\n       count: this.product_count,\n     }\n     this.$store.dispatch(\"sellProduct\", product)\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (\n      ((this.selectedProduct !== null ||\n        this.product_count > 0 ) && this.saveButtonClicked)\n    ) {\n      if (confirm(\"Kaydedilmemiş değişiklikler var. Yine de çıkmak istiyor musunuz?\")) {\n        next();\n      } else {\n        next(false);\n      }\n    } else {\n      next();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.border-danger {\n  border-style: dashed !important;\n}\n</style>\n"],"mappings":"AAqDA,SAAAA,UAAA;AACA;EACAC,KAAA;IACA;MACAC,eAAA;MACAC,OAAA;MACAC,aAAA;MACAC,iBAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAN,UAAA;IACAO,UAAA;MACA,SAAAF,iBAAA;QACA;UACAG,OAAA;QACA;MACA;QACA;UACAA,OAAA;QAEA;MACA;IACA;EACA;EACAC,OAAA;IACAC,gBAAA;MACA,KAAAP,OAAA,QAAAQ,MAAA,CAAAC,OAAA,CAAAC,UAAA,MAAAX,eAAA;IAEA;IACAY,KAAA;MACA,KAAAT,iBAAA;MACA,IAAAF,OAAA;QACAY,GAAA,OAAAb,eAAA;QACAc,KAAA,OAAAZ;MACA;MACA,KAAAO,MAAA,CAAAM,QAAA,gBAAAd,OAAA;IACA;EACA;EACAe,iBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IACA,IACA,MAAAnB,eAAA,aACA,KAAAE,aAAA,cAAAC,iBAAA,EACA;MACA,IAAAiB,OAAA;QACAD,IAAA;MACA;QACAA,IAAA;MACA;IACA;MACAA,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}